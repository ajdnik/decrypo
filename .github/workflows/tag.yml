name: push-new-tag
on:
  create:
    tags:
      - "refs/tags/*.*.*"
jobs:
  build_artifacts:
    strategy:
      matrix:
        os: [macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    name: build-artifacts-${{ matrix.os }}
    steps:
      - name: Setup Go 1.13
        uses: actions/setup-go@v1
        with:
          go-version: 1.13
        env:
          GOPATH: ${{ runner.workspace }}
          GOBIN: ${{ runner.workspace }}/bin
      - name: Checkout Code
        uses: actions/checkout@v1
        with:
          path: src/github.com/${{ github.repository }}
      - name: Setup Go Environment
        run: |
          mkdir -p $GOPATH/bin
        shell: bash
      - name: Get Dependencies
        run: |
          cd $GOPATH/src/github.com/$GITHUB_REPOSITORY
          curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
          $GOBIN/dep ensure
        shell: bash
      - name: Run Tests
        run: |
          cd $GOPATH/src/github.com/$GITHUB_REPOSITORY
          go test ./...
        shell: bash
      - name: Build Artifacts
        run: |
          cd $GOPATH/src/github.com/$GITHUB_REPOSITORY
          export TIME=`date +%FT%T%z`
          export NAME=$(echo "${OS}_${ARCH}" | tr '[:upper:]' '[:lower:]')
          mkdir -p "dist/${NAME}"
          CGO_ENABLED=1 go build -ldflags "-s -w -X github.com/ajdnik/decrypo/build.Version=${TAG} -X github.com/ajdnik/decrypo/build.Datetime=${TIME}" -o "dist/${NAME}/decrypo"
        shell: bash
        env:
          TAG: ${{ github.ref }}
          OS: ${{ runner.os }}
          ARCH: amd64
      - name: Archive Artifacts
        run: |
          cd $GOPATH/src/github.com/$GITHUB_REPOSITORY
          export NAME=$(echo "${OS}_${ARCH}" | tr '[:upper:]' '[:lower:]')
          cd "dist/${NAME}" && tar -cvzf "../${NAME}.tar.gz" *
          cd ../ && shasum -a 256 "${NAME}.tar.gz" > "${NAME}.sha256"
          rm -rf "${NAME}"
        shell: bash
        if: runner.os == 'macOS'
        env:
          OS: ${{ runner.os }}
          ARCH: amd64
      - name: Archive Artifacts
        run: |
          Set-Location "$($Env:GOPATH)/src/github.com/$($Env:GITHUB_REPOSITORY)"
          $Name = "$($Env:OS)_$($Env:ARCH)".ToLower()
          Rename-Item -Path "dist/$($Name)/decrypo" -NewName "decrypo.exe"
          Add-Type -assembly "system.io.compression.filesystem"
          [io.compression.zipfile]::CreateFromDirectory("dist/$($Name)", "dist/$($Name).zip")
          Get-FileHash "dist/$($Name).zip" -Algorithm SHA256 | Export-Clixml -Path "dist/$($Name).sha256"
          Remove-Item -Path "dist/$($Name)" -Recurse
        shell: powershell
        if: runner.os == 'Windows'
        env:
          OS: ${{ runner.os }}
          ARCH: amd64
      - name: Upload Artifacts
        uses: actions/upload-artifact@v1
        with:
          name: ${{ runner.os }}
          path: ${{ runner.workspace }}/src/github.com/${{ github.repository }}/dist
  create_release:
    runs-on: ubuntu-latest
    name: create-release
    needs: build_artifacts
    steps:
      - name: Checkout Code
        uses: actions/checkout@v1
      - name: Create Release
        uses: actions/create-release@v1
        id: release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
      - name: Download Windows Artifacts
        uses: actions/download-artifact@v1
        with:
          name: Windows
      - name: Download macOS Artifacts
        uses: actions/download-artifact@v1
        with:
          name: macOS
      - name: Upload Windows Binary
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.release.outputs.upload_url }}
          asset_path: Windows/windows_amd64.zip
          asset_name: windows_amd64.zip
          asset_content_type: application/zip
      - name: Upload Windows Binary SHA Sum
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.release.outputs.upload_url }}
          asset_path: Windows/windows_amd64.sha256
          asset_name: windows_amd64.sha256
          asset_content_type: application/xml
      - name: Upload macOS Binary
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.release.outputs.upload_url }}
          asset_path: macOS/macos_amd64.tar.gz
          asset_name: macos_amd64.tar.gz
          asset_content_type: application/gzip
      - name: Upload macOS Binary SHA Sum
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.release.outputs.upload_url }}
          asset_path: macOS/macos_amd64.sha256
          asset_name: macos_amd64.sha256
          asset_content_type: text/plain
